# Procfile.windows
import telebot
import config
import random


from telebot import types
 
bot = telebot.TeleBot(config.TOKEN)
 
@bot.message_handler(commands=['start'])
def welcome(message):
    
 
    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
    item2 = types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")
    item4 = types.KeyboardButton("‚è∞ –ü–µ—Ä–µ–º–µ–Ω–∞ ‚è∞")
    item5 = types.KeyboardButton("üìã –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üìã")
 
    markup.add(item1, item2, item4, item5)
 
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n –Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫—Ä–æ–ª–∏–∫–æ–º.\n –ù–∞–ø–∏—à–∏ –ø—Ä–∏–≤–µ—Ç, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!!!".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)
 
@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, str(random.randint(0,100)))
        elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':
 
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')
            item3 = types.InlineKeyboardButton("–û—Ç–ª–∏—á–Ω–æ", callback_data='cool')
           
 
            markup.add(item1, item2, item3)
 
            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
        elif message.text == '‚è∞ –ü–µ—Ä–µ–º–µ–Ω–∞ ‚è∞':
            bot.send_message(message.chat.id, ("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω :\n –£—Ä–æ–∫|   –ù–∞—á–∞–ª–æ |   –ö–æ–Ω–µ—Ü |   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω—ã\n 1    |    08:30    |  09:15   |   10 –º–∏–Ω—É—Ç\n 2    |    09:25    |  10:10   |   20 –º–∏–Ω—É—Ç\n 3    |    10:30    |  11:15   |   20 –º–∏–Ω—É—Ç\n 4    |    11:35    |  12:20   |   10 –º–∏–Ω—É—Ç\n 5    |    12:30    |  13:15   |   10 –º–∏–Ω—É—Ç\n 6    |    13:25    |  14:10   |   15 –º–∏–Ω—É—Ç\n 7    |    14:25    |  15:10   |   10 –º–∏–Ω—É—Ç\n 8    |    15:20    |  16:05   |   00–º–∏–Ω—É—Ç "))

        elif message.text == 'üìã–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìã':
            bot.send_message(message.chat.id, ("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏:"))

            markup3 = types.InlineKeyboardMarkup(row_width=2)
            pon = types.InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:', callback_data='pon')
            wto = types.InlineKeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫:', callback_data='wto')
            sre = types.InlineKeyboardButton('–°—Ä–µ–¥–∞:', callback_data='sre')
            che = types.InlineKeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥:', callback_data='che')
            pat = types.InlineKeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞:', callback_data='pat')

            markup3.add(pon,wto,sre,che,pat)
            bot.send_message(message.chat.id, '======================================', reply_markup=markup3)


           


       
    if message.text.lower() == "–ø—Ä–∏–≤–µ—Ç":
        bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, —á–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?")
    elif message.text == "/help":
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏ –ø—Ä–∏–≤–µ—Ç")
    elif message.text.lower() == "–ø–æ–∫–∞":
        bot.send_message(message.from_user.id, "–ü–æ–∫–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—å!")
          
 
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')
            elif call.data == 'cool':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'pon':
                bot.send_message(call.message.chat.id, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n 1. –ë–∏–æ–ª–æ–≥–∏—è\n 2. –¢—Ä—É–¥\n 3. –ò—Å—Ç–æ—Ä–∏—è –£–∫—Ä./–•–∞—Ä—å–∫–æ–≤\n 4. –ê–ª–≥–µ–±—Ä–∞\n 5. –•–∏–º–∏—è\n 6. –ù–µ–º–µ—Ü–∫–∏–π\n 7. –§–∏–∑–∏–∫–∞ ')
            elif call.data == 'wti':
                bot.send_message(call.message.chat.id, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n 1. –ì–µ–æ–º–µ—Ç—Ä–∏—è\n 2. –ò—Å—Ç–æ—Ä–∏—è –£–∫—Ä.\n  3. –£–∫—Ä. –ú–æ–≤–∞\n 4. –ò–Ω—Ñ–∞\n 5. –ê–Ω–≥–ª–∏–π—Å–∫–∏–π\n 6. –ò—Å–∫—É—Å—Å—Ç–≤–æ\n 7. –§–∏–∑-—Ä–∞')
            elif call.data == 'sre':
                bot.send_message(call.message.chat.id, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n 1. –ü—Ä–∞–≤–æ\n 2. –ê–ª–≥–µ–±—Ä–∞\n  3. –£–∫—Ä. –õ–∏—Ç\n 4. –•–∏–º–∏—è\n 5. –§–∏–∑–∏–∫–∞\n 6. –ù–µ–º–µ—Ü–∫–∏–π\n 7. –ì–µ–æ–≥—Ä–∞—Ñ–∏—è\n 8. –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞')
            elif call.data == 'che':
                bot.send_message(call.message.chat.id, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n 1. –†—É—Å—Å–∫–∏–π —è–∑—ã–∫\n 2. –£–∫—Ä.–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞\n 3. –ì–µ–æ–º–µ—Ç—Ä–∏—è\n 4. –ë–∏–æ–ª–æ–≥–∏—è\n 5. –ò–Ω—Ñ–∞\n 6. –§–∏–∑-—Ä–∞\n 7. –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞')
            elif call.data == 'pat':
                bot.send_message(call.message.chat.id, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n 1. –û—Å–Ω–æ–≤—ã –ó–¥–æ—Ä–æ–≤—å—è\n 2. –í—Å–µ–º–∏—Ä–Ω–∞—è –ò—Å—Ç–æ—Ä–∏—è\n 3. –£–∫—Ä. –ú–æ–≤–∞\n 4. –§–∏–∑-—Ä–∞\n 5. –†—É—Å—Å–∫–∏–π —è–∑—ã–∫\n 6. –ê–Ω–≥–ª–∏–π—Å–∫–∏–π\n 7. –§–∏–∑–∏–∫–∞\n 8. –ö–ª–∞—Å—Å–Ω—ã–π –ß–∞—Å')

        
 
    except Exception as e:
        print(repr(e))
 
# RUN
bot.polling(none_stop=True)
